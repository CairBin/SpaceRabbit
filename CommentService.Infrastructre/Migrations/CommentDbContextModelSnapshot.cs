// <auto-generated />
using System;
using CommentService.Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CommentService.Infrastructure.Migrations
{
    [DbContext(typeof(CommentDbContext))]
    partial class CommentDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("CommentService.Domain.Entity.Comment", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid?>("AuthorId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("ContentId")
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("Deleted")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<Guid?>("Parent")
                        .HasColumnType("char(36)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.Property<DateTime>("Updated")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("IsDeleted", "Id", "Type", "Status");

                    b.ToTable("T_Comments", (string)null);
                });

            modelBuilder.Entity("CommentService.Domain.Entity.Comment", b =>
                {
                    b.OwnsOne("CommentService.Domain.ValueObject.Submitter", "Submitter", b1 =>
                        {
                            b1.Property<Guid>("CommentId")
                                .HasColumnType("char(36)");

                            b1.Property<string>("Agent")
                                .HasMaxLength(1000)
                                .IsUnicode(true)
                                .HasColumnType("varchar(1000)");

                            b1.Property<string>("Email")
                                .IsRequired()
                                .HasMaxLength(100)
                                .HasColumnType("varchar(100)");

                            b1.Property<string>("IpAddr")
                                .HasColumnType("longtext");

                            b1.Property<string>("Name")
                                .IsRequired()
                                .HasMaxLength(100)
                                .IsUnicode(true)
                                .HasColumnType("varchar(100)");

                            b1.Property<string>("SiteUrl")
                                .HasMaxLength(1000)
                                .HasColumnType("varchar(1000)");

                            b1.HasKey("CommentId");

                            b1.ToTable("T_Comments");

                            b1.WithOwner()
                                .HasForeignKey("CommentId");
                        });

                    b.Navigation("Submitter")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
