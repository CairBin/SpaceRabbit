// <auto-generated />
using System;
using ArticleService.Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ArticleService.Infrastructure.Migrations
{
    [DbContext(typeof(ArticleDbContext))]
    [Migration("20240124163635_Init")]
    partial class Init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("ArticleService.Domain.Entity.Article", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid>("AuthorId")
                        .HasColumnType("char(36)");

                    b.Property<Guid?>("CategoryId")
                        .HasColumnType("char(36)");

                    b.Property<string>("Content")
                        .IsRequired()
                        .IsUnicode(true)
                        .HasColumnType("longtext");

                    b.Property<string>("CoverUrl")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("Deleted")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsVisible")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(500)
                        .IsUnicode(true)
                        .HasColumnType("varchar(500)");

                    b.Property<DateTime>("Updated")
                        .HasColumnType("datetime(6)");

                    b.Property<long>("ViewNumber")
                        .HasColumnType("bigint");

                    b.HasKey("Id")
                        .HasAnnotation("SqlServer:Clustered", false);

                    b.HasIndex("Id", "IsDeleted");

                    b.ToTable("T_Articles", (string)null);
                });

            modelBuilder.Entity("ArticleService.Domain.Entity.Article", b =>
                {
                    b.OwnsOne("ArticleService.Domain.ValueObject.AdditionalField", "OptionField", b1 =>
                        {
                            b1.Property<Guid>("ArticleId")
                                .HasColumnType("char(36)");

                            b1.Property<string>("PrivateField")
                                .IsRequired()
                                .IsUnicode(true)
                                .HasColumnType("longtext");

                            b1.Property<string>("PublicField")
                                .IsRequired()
                                .IsUnicode(true)
                                .HasColumnType("longtext");

                            b1.HasKey("ArticleId");

                            b1.ToTable("T_Articles");

                            b1.WithOwner()
                                .HasForeignKey("ArticleId");
                        });

                    b.OwnsOne("ArticleService.Domain.ValueObject.Password", "HashPassword", b1 =>
                        {
                            b1.Property<Guid>("ArticleId")
                                .HasColumnType("char(36)");

                            b1.Property<string>("HashValue")
                                .IsRequired()
                                .IsUnicode(false)
                                .HasColumnType("longtext");

                            b1.Property<string>("Salt")
                                .IsRequired()
                                .IsUnicode(false)
                                .HasColumnType("longtext");

                            b1.HasKey("ArticleId");

                            b1.ToTable("T_Articles");

                            b1.WithOwner()
                                .HasForeignKey("ArticleId");
                        });

                    b.Navigation("HashPassword");

                    b.Navigation("OptionField")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
